FROM php:7.1-cli

# Required Components
# @see https://secure.phabricator.com/book/phabricator/article/installation_guide/#installing-required-comp
RUN apt-get update \
  && apt-get install -y --no-install-recommends \
    git \
    ca-certificates \
  && rm -rf /var/lib/apt/lists/*

# install the PHP extensions we need
RUN set -ex; \
	savedAptMark="$(apt-mark showmanual)"; \
	\
	apt-get update; \
	apt-get install -y --no-install-recommends \
		libcurl4-gnutls-dev \
	; \
	\
	docker-php-ext-install -j "$(nproc)" \
    opcache \
		mbstring \
		iconv \
		mysqli \
		curl \
		pcntl \
	; \
	\
  # reset apt-mark's "manual" list so that "purge --auto-remove" will remove all build dependencies
	apt-mark auto '.*' > /dev/null; \
	apt-mark manual $savedAptMark; \
	ldd "$(php -r 'echo ini_get("extension_dir");')"/*.so \
		| awk '/=>/ { print $3 }' \
		| sort -u \
		| xargs -r dpkg-query -S \
		| cut -d: -f1 \
		| sort -u \
		| xargs -rt apt-mark manual; \
	\
	apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \
	rm -rf /var/lib/apt/lists/*

RUN pecl channel-update pecl.php.net \
  && pecl install apcu \
  && docker-php-ext-enable apcu

# set recommended PHP.ini settings
# see https://secure.php.net/manual/en/opcache.installation.php
RUN { \
  		echo 'opcache.memory_consumption=128'; \
  		echo 'opcache.interned_strings_buffer=8'; \
  		echo 'opcache.max_accelerated_files=4000'; \
  		echo 'opcache.revalidate_freq=60'; \
  		echo 'opcache.fast_shutdown=1'; \
  		echo 'opcache.enable_cli=1'; \
    } > /usr/local/etc/php/conf.d/opcache-recommended.ini

RUN mkdir -p /var/tmp/phd/log/ \
  && touch /var/tmp/phd/log/daemons.log

# install mysql-client
RUN apt-get update; \
	apt-get install -y --no-install-recommends mysql-client; \
	rm -rf /var/lib/apt/lists/*

COPY ./ /var/www

WORKDIR /var/www

RUN git submodule update --init --recursive

ENV PATH "$PATH:/var/www/phabricator/bin"

# copy and set entrypoint
COPY docker/bin/entrypoint.sh /usr/bin/entrypoint.sh
ENTRYPOINT [ "/usr/bin/entrypoint.sh" ]
CMD [ "docker-php-entrypoint", "phd start && tail -f /var/tmp/phd/log/daemons.log" ]
